//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright Clairvoyant 2019
//
{
  "name": "AIRFLOW",
  "label": "Airflow",
  "description": "Airflow is a platform to programmatically author, schedule and monitor workflows. <span class=\"error\">Before adding this service, ensure that the Airflow parcel has been activated.</span>",
  "version": "1.10.3",
  "runAs": {
    "user": "airflow",
    "group": "airflow",
    "principal": "airflow"
  },
  "maxInstances": 1,
  "icon": "images/airflow.png",
  "compatibility": {
    "cdhVersion": {
      "min": "5.13.0"
    }
  },
  "parcel": {
    "repoUrl": "http://archive.clairvoyantsoft.com/airflow/parcels/latest/",
    "requiredTags": [
      "airflow"
    ]
  },
  "serviceInit": {
    "preStartSteps": [
      {
        "commandName": "InitializeAirflowDB"
      }
    ]
  },
  "commands": [
    {
      "name": "InitializeAirflowDB",
      "label": "Initialize Airflow DB",
      "description": "Initialize the Airflow Database. ( See: https://airflow.apache.org/howto/initialize-database.html )",
      "roleCommand": "InitializeAirflowDB",
      "roleName": "AIRFLOW_SCHEDULER",
      "runMode": "single"
    },
    {
      "name": "UpgradeAirflowDB",
      "label": "Upgrade Airflow DB",
      "description": "Upgrade the Airflow Database.",
      "roleCommand": "UpgradeAirflowDB",
      "roleName": "AIRFLOW_SCHEDULER",
      "runMode": "single"
    }
  ],
  "parameters": [
    {
      "name": "airflow_home",
      "label": "Airflow Home",
      "description": "The home folder for Airflow. (Location of airflow.cfg)",
      "required": true,
      "type": "path",
      "pathType": "localDataDir",
      "default": "/var/lib/airflow",
      "configurableInWizard": true
    },
    {
      "name": "CORE_dags_folder",
      "label": "[CORE] Dags Folder",
      "description": "The folder where your Airflow pipelines live, most likely a subfolder in a code repository. (This path must be absolute)",
      "type": "path",
      "pathType": "localDataDir",
      "default": "/var/lib/airflow/dags",
      "configurableInWizard": true
    },
    {
      "name": "CORE_base_log_folder",
      "label": "[CORE] Base Logs Folder",
      "description": "The folder where Airflow should store its log files. (This path must be absolute)",
      "required": true,
      "type": "path",
      "pathType": "localDataDir",
      "default": "/var/log/airflow/base",
      "configurableInWizard": true
    },
    {
      "name": "CORE_plugins_folder",
      "label": "[CORE] Plugins Folder",
      "description": "Where your Airflow plugins are stored. (This path must be absolute)",
      "required": true,
      "type": "path",
      "pathType": "localDataDir",
      "default": "/var/lib/airflow/plugins",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_type",
      "label": "[CORE] Database Type",
      "description": "The type of the database to be used by Airflow.",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "postgresql",
        "mysql"
      ],
      "default": "mysql",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_host",
      "label": "[CORE] Database Host",
      "description": "The IP or hostname of the database to be used by Airflow.",
      "required": true,
      "type": "string",
      "default": "localhost",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_port",
      "label": "[CORE] Database Port",
      "description": "The port of the database to be used by Airflow.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 3306,
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_name",
      "label": "[CORE] Database Name",
      "description": "The name of the database to be used by Airflow.",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_username",
      "label": "[CORE] Database Username",
      "description": "The username for Airflow to connect to the database.",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_password",
      "label": "[CORE] Database Password",
      "description": "The password for Airflow to connect to the database.",
      "required": true,
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CORE_db_alchemy_pool_size",
      "label": "[CORE] Database Connection Pool Size",
      "description": "The SqlAlchemy pool size is the maximum number of database connections in the pool. (0 indicates no limit)",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 5
    },
    {
      "name": "CORE_db_alchemy_pool_recycle",
      "label": "[CORE] Database Connection Pool Recycle Time",
      "description": "The SqlAlchemy pool recycle is the number of seconds a connection can be idle in the pool before it is invalidated. If the number of DB connections is ever exceeded, a lower config value will allow the system to recover faster.",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 1800
    },
    {
      "name": "CORE_db_alchemy_reconnect_timeout",
      "label": "[CORE] Database Reconnect Timeout",
      "description": "How many seconds to retry re-establishing a DB connection after If the number of DB connections is ever exceeded, disconnects. (Setting this to 0 disables retries)",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 300
    },
    {
      "name": "CORE_parallelism",
      "label": "[CORE] Parallelism",
      "description": "The max number of task instances that should run simultaneously on this Airflow installation.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 32
    },
    {
      "name": "CORE_dag_concurrency",
      "label": "[CORE] DAG Concurrency",
      "description": "The number of task instances allowed to run concurrently by the scheduler.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 16
    },
    {
      "name": "CORE_dags_are_paused_at_creation",
      "label": "[CORE] DAGs Paused at Creation",
      "description": "Are DAGs paused by default at creation.",
      "required": true,
      "type": "boolean",
      "default": true
    },
    {
      "name": "CORE_non_pooled_task_slot_count",
      "label": "[CORE] Non-Pooled Task Slot Count",
      "description": "When not using pools, tasks are run in the 'default pool', whose size is guided by this config element.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 128
    },
    {
      "name": "CORE_max_active_runs_per_dag",
      "label": "[CORE] Max Active Runs Per Dag",
      "description": "The maximum number of active DAG runs per DAG.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 16
    },
    {
      "name": "CORE_load_examples",
      "label": "[CORE] Load Examples",
      "description": "Whether to load the examples that ship with Airflow. It's good to get started, but you probably want to set this to False in a production environment.",
      "required": true,
      "type": "boolean",
      "default": false,
      "configurableInWizard": true
    },
    {
      "name": "CORE_fernet_key",
      "label": "[CORE] Fernet Encryption Key",
      "description": "Secret key to save connection passwords in the db, can be left empty for no encryption. ( See: https://airflow.apache.org/howto/secure-connections.html )",
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CORE_donot_pickle",
      "label": "[CORE] Don't Pickle Dags",
      "description": "Whether to disable pickling dags.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "CORE_dagbag_import_timeout",
      "label": "[CORE] DagBag Import Timeout",
      "description": "How long before timing out a python file import while filling the DagBag.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 30
    },
    {
      "name": "CORE_default_impersonation",
      "label": "[CORE] Default Impersonation",
      "description": "If set, tasks without a `run_as_user` argument will be run with this user. (Can be used to de-elevate a sudo user running Airflow when executing tasks)",
      "type": "string",
      "default": ""
    },
    {
      "name": "CORE_security",
      "label": "[CORE] Security Type",
      "description": "What security module to use. [This needs to be set as 'kerberos' if your cluster is kerberized] ( See: https://airflow.apache.org/security.html?highlight=security#enabling-kerberos )",
      "type": "string_enum",
      "validValues": [
        "",
        "kerberos"
      ],
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CORE_secure_mode",
      "label": "[CORE] Secure Mode",
      "description": "If set to False enables some insecure features like Charts and Ad Hoc Queries.",
      "required": true,
      "type": "boolean",
      "default": true
    },
    {
      "name": "CORE_killed_task_cleanup_time",
      "label": "[CORE] Killed Task Cleanup Time",
      "description": "When a task is killed forcefully, this is the amount of time in seconds that it has to cleanup after it is sent a SIGTERM, before it is SIGKILLED.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 60
    },
    {
      "name": "CORE_dag_run_conf_overrides_params",
      "label": "[CORE] Dag Run Conf Overrides Params",
      "description": "Whether to override params with dag_run.conf. If you pass some key-value pairs through `airflow backfill -c` or `airflow trigger_dag -c`, the key-value pairs will override the existing ones in params.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "CORE_worker_precheck",
      "label": "[CORE] Worker pre-Check",
      "description": "Worker initialisation check to validate Metadata Database connection.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "CORE_dag_discovery_safe_mode",
      "label": "[CORE] DAG Discovery Safe Mode",
      "description": "When discovering DAGs, ignore any files that don't contain the strings `DAG` and `airflow`.",
      "required": true,
      "type": "boolean",
      "default": true
    },
    {
      "name": "CLI_api_client",
      "label": "[CLI] API Client Type",
      "description": "In what way should the CLI access the API, `local_client` will use the database directly, while `json_client` will use the api running on the webserver at the specified 'endpoint_url'.",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "airflow.api.client.local_client",
        "airflow.api.client.json_client"
      ],
      "default": "airflow.api.client.local_client"
    },
    {
      "name": "CLI_endpoint_url",
      "label": "[CLI] API Endpoint URL",
      "description": "The endpoint used by the CLI to access the API. (If `json_client` is used as 'api_client')",
      "required": true,
      "type": "uri",
      "default": "http://localhost:8080"
    },
    {
      "name": "API_auth_backend",
      "label": "[API] Auth Backend",
      "description": "How to authenticate users of the API ( See: https://airflow.apache.org/api.html?highlight=auth_backend#authentication )",
      "required": true,
      "type": "string",
      "default": "airflow.api.auth.backend.deny_all",
      "configurableInWizard": true
    },
    {
      "name": "LINEAGE_backend",
      "label": "[LINEAGE] Backend Type",
      "description": "What lineage backend to use. ( See: https://airflow.apache.org/lineage.html )",
      "type": "string_enum",
      "validValues": [
        "",
        "airflow.lineage.backend.atlas"
      ],
      "default": ""
    },
    {
      "name": "ATLAS_host",
      "label": "[ATLAS] Host",
      "description": "The IP or hostname of the Atlas server.",
      "type": "string",
      "default": ""
    },
    {
      "name": "ATLAS_port",
      "label": "[ATLAS] Port",
      "description": "The port used by the Atlas server.",
      "type": "long",
      "min": 1,
      "default": 21000
    },
    {
      "name": "ATLAS_username",
      "label": "[ATLAS] Username",
      "description": "The username to be used when connecting to the Atlas server.",
      "type": "string",
      "default": ""
    },
    {
      "name": "ATLAS_password",
      "label": "[ATLAS] Password",
      "description": "The password to be used when connecting to the Atlas server.",
      "type": "password",
      "default": ""
    },
    {
      "name": "OPERATORS_default_owner",
      "label": "[OPERATORS] Default Owner",
      "description": "The default owner assigned to each new operator, unless provided explicitly or passed via `default_args`.",
      "required": true,
      "type": "string",
      "default": "Airflow"
    },
    {
      "name": "OPERATORS_default_cpus",
      "label": "[OPERATORS] Default CPUs",
      "description": "The default number of CPUs to assign to operators.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 1
    },
    {
      "name": "OPERATORS_default_ram",
      "label": "[OPERATORS] Default RAM",
      "description": "The default amount of RAM to assign to operators, in MB.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 512
    },
    {
      "name": "OPERATORS_default_disk",
      "label": "[OPERATORS] Default Disk Space",
      "description": "The default amount of disk space to assign to operators, in MB.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 512
    },
    {
      "name": "OPERATORS_default_gpus",
      "label": "[OPERATORS] Default GPUs",
      "description": "The default number of GPUs to assign to operators.",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 0
    },
    {
      "name": "HIVE_default_hive_mapred_queue",
      "label": "[HIVE] Default Hive MapReduce Queue",
      "description": "Default MapReduce queue for HiveOperator tasks.",
      "type": "string",
      "default": ""
    },
    {
      "name": "WEBSERVER_base_url",
      "label": "[WEBSERVER] Webserver Base URL",
      "description": "The base url of your website as airflow cannot guess what domain or cname you are using. This is used in automated emails that airflow sends to point links to the right webserver.",
      "required": true,
      "type": "uri",
      "default": "http://localhost:8080",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_web_server_host",
      "label": "[WEBSERVER] Webserver Host IP",
      "description": "The ip specified when starting the webserver.",
      "required": true,
      "type": "string",
      "default": "0.0.0.0",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_web_server_port",
      "label": "[WEBSERVER] Webserver Host Port",
      "description": "The port on which to run the webserver.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 8080,
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_web_server_ssl_cert",
      "label": "[WEBSERVER] Webserver SSL Cert Path",
      "description": "Path to the SSL certificate for the webserver. (This does not change the webserver port & SSL Key must also be specified to enable SSL)",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_web_server_ssl_key",
      "label": "[WEBSERVER] Webserver SSL Key Path",
      "description": "Path to the SSL key for the webserver. (This does not change the webserver port & SSL Cert must also be specified to enable SSL)",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_web_server_master_timeout",
      "label": "[WEBSERVER] Webserver Master Timeout",
      "description": "Number of seconds the webserver waits before killing Gunicorn master that doesn't respond.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 120
    },
    {
      "name": "WEBSERVER_web_server_worker_timeout",
      "label": "[WEBSERVER] Webserver Worker Timeout",
      "description": "Number of seconds the Gunicorn webserver waits before timing out on a worker.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 120
    },
    {
      "name": "WEBSERVER_worker_refresh_batch_size",
      "label": "[WEBSERVER] Webserver Refresh Batch Size",
      "description": "Number of workers to refresh at a time. When set to 0, worker refresh is disabled. When nonzero, airflow periodically refreshes webserver workers by bringing up new ones and killing old ones.",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 1
    },
    {
      "name": "WEBSERVER_worker_refresh_interval",
      "label": "[WEBSERVER] Webserver Refresh Interval",
      "description": "Number of seconds to wait before refreshing a batch of workers.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 30
    },
    {
      "name": "WEBSERVER_secret_key",
      "label": "[WEBSERVER] Secret Key",
      "description": "Secret key used to run your flask app.",
      "required": true,
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_workers",
      "label": "[WEBSERVER] Workers",
      "description": "Number of workers to run the Gunicorn webserver.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 4
    },
    {
      "name": "WEBSERVER_worker_class",
      "label": "[WEBSERVER] Worker Class",
      "description": "The worker class gunicorn should use.",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "eventlet",
        "gevent",
        "sync"
      ],
      "default": "sync"
    },
    {
      "name": "WEBSERVER_expose_config",
      "label": "[WEBSERVER] Expose Config",
      "description": "Expose the configuration file in the webserver. This is only applicable for the flask-admin based web UI (non FAB-based). In the FAB-based web UI with RBAC feature, access to configuration is controlled by role permissions.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "WEBSERVER_authenticate",
      "label": "[WEBSERVER] Authenticate",
      "description": "Set to true to turn on authentication. ( See: https://airflow.apache.org/security.html#web-authentication )",
      "required": true,
      "type": "boolean",
      "default": false,
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_auth_backend",
      "label": "[WEBSERVER] Auth Backend",
      "description": "How to authenticate users of the WebServer. [Only applicable if FAB-Based UI is disabled and Authenticate is enabled] ( See: https://airflow.apache.org/security.html#web-authentication )",
      "required": true,
      "type": "string",
      "default": "airflow.contrib.auth.backends.password_auth",
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_filter_by_owner",
      "label": "[WEBSERVER] Filter By Owner",
      "description": "Filter the list of dags by owner name (requires authentication to be enabled)",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "WEBSERVER_owner_mode",
      "label": "[WEBSERVER] Owner Mode",
      "description": "Filtering mode. Ldap group filtering requires using the ldap backend. (Note that the ldap server needs the 'memberOf' overlay to be set up in order to user the ldapgroup mode)",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "user",
        "ldapgroup"
      ],
      "default": "user"
    },
    {
      "name": "WEBSERVER_dag_default_view",
      "label": "[WEBSERVER] DAG Default View",
      "description": "Default DAG view.",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "duration",
        "gantt",
        "graph",
        "landing_times",
        "tree"
      ],
      "default": "tree"
    },
    {
      "name": "WEBSERVER_dag_orientation",
      "label": "[WEBSERVER] Dag Orientation",
      "description": "Default DAG orientation: LR (Left->Right), TB (Top->Bottom), RL (Right->Left), BT (Bottom->Top)",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "LR",
        "TB",
        "RL",
        "BT"
      ],
      "default": "LR"
    },
    {
      "name": "WEBSERVER_log_fetch_timeout_sec",
      "label": "[WEBSERVER] Log Fetch Timeout",
      "description": "The amount of time (in secs) webserver will wait for initial handshake while fetching logs from other worker machine.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 5
    },
    {
      "name": "WEBSERVER_hide_paused_dags_by_default",
      "label": "[WEBSERVER] Hide Paused DAGs by Default",
      "description": "If paused DAGs should be hidden by default in the webserver.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "WEBSERVER_page_size",
      "label": "[WEBSERVER] Page Size",
      "description": "Consistent page size across all listing views in the UI.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 100
    },
    {
      "name": "WEBSERVER_rbac",
      "label": "[WEBSERVER] RBAC UI",
      "description": "Use FAB-based webserver with role-based access control (RBAC). ( See: https://airflow.apache.org/security.html#rbac-ui-security )",
      "required": true,
      "type": "boolean",
      "default": false,
      "configurableInWizard": true
    },
    {
      "name": "WEBSERVER_navbar_color",
      "label": "[WEBSERVER] Navigation Bar Color",
      "description": "Define the color of navigation bar.",
      "required": true,
      "type": "string",
      "default": "#007A87"
    },
    {
      "name": "WEBSERVER_default_dag_run_display_number",
      "label": "[WEBSERVER] Default DAG Run Display Number ",
      "description": "Default number of DAG Run to show in UI.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 25
    },
    {
      "name": "WEBSERVER_enable_proxy_fix",
      "label": "[WEBSERVER] Enable Proxy Fix",
      "description": "Enable werkzeug `ProxyFix` middleware.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "WEBSERVER_cookie_secure",
      "label": "[WEBSERVER] Cookie Secure",
      "description": "Set secure flag on session cookie.",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "WEBSERVER_cookie_samesite",
      "label": "[WEBSERVER] Cookie Samesite Policy",
      "description": "Set Flask SESSION_COOKIE_SAMESITE policy on session cookie. ( See: https://flask.palletsprojects.com/en/1.1.x/config/#SESSION_COOKIE_SAMESITE )",
      "type": "string_enum",
      "validValues": [
        "",
        "Lax",
        "Strict"
      ],
      "default": ""
    },
    {
      "name": "EMAIL_email_backend",
      "label": "[EMAIL] Email Backend",
      "description": "The email backend type to use.",
      "required": true,
      "type": "string",
      "default": "airflow.utils.email.send_email_smtp"
    },
    {
      "name": "SMTP_smtp_host",
      "label": "[SMTP] SMTP Host",
      "description": "The IP or hostname of the SMTP server.",
      "required": true,
      "type": "string",
      "default": "localhost",
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_port",
      "label": "[SMTP] SMTP Port",
      "description": "The port of the SMTP server.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 25,
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_starttls",
      "label": "[SMTP] SMTP STARTTLS",
      "description": "If STARTTLS should be used with the SMTP server.",
      "required": true,
      "type": "boolean",
      "default": true,
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_ssl",
      "label": "[SMTP] SMTP SSL",
      "description": "If SSL should be used with the SMTP server.",
      "required": true,
      "type": "boolean",
      "default": false,
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_user",
      "label": "[SMTP] SMTP Username",
      "description": "The username to authenticate with the SMTP server. (Specify if you want to use SMTP AUTH)",
      "type": "string",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_password",
      "label": "[SMTP] SMTP Password",
      "description": "The password to authenticate with the SMTP server.",
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "SMTP_smtp_mail_from",
      "label": "[SMTP] SMTP Mail From",
      "description": "The email to send from.",
      "required": true,
      "type": "string",
      "default": "airflow@example.com",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_celery_app_name",
      "label": "[CELERY] Celery App Name",
      "description": "The app name that will be used by celery.",
      "required": true,
      "type": "string",
      "default": "airflow.executors.celery_executor"
    },
    {
      "name": "CELERY_worker_autoscale",
      "label": "[CELERY] Worker Autoscale",
      "description": "The maximum and minimum concurrency that will be used when starting workers. This defines the number of task instances that a worker will take, so size up your workers based on the resources on your worker box and the nature of your tasks. (Note the value should be 'max_concurrency,min_concurrency')",
      "required": true,
      "type": "string",
      "conformRegex": "^[0-9]+,[0-9]+$",
      "default": "16,12"
    },
    {
      "name": "CELERY_worker_log_server_port",
      "label": "[CELERY] Worker Log Server Port",
      "description": "When you start an airflow worker, airflow starts a tiny web server subprocess to serve the workers local log files to the airflow main  web server, who then builds pages and sends them to users. This defines the port on which the logs are served. It needs to be unused, and open visible from the main web server to connect into the workers.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 8793,
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_type",
      "label": "[CELERY] Broker Type",
      "description": "Type type of broker to be used by Celery: ('ampq' -> RabbitMQ, 'sqla+mysql' -> MySQL, 'sqla+postgresql' -> PostgreSQL, 'redis' -> Redis)",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "amqp",
        "sqla+mysql",
        "sqla+postgresql",
        "redis"
      ],
      "default": "sqla+mysql",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_host",
      "label": "[CELERY] Broker Host",
      "description": "The IP or hostname of the broker to be used by Celery.",
      "required": true,
      "type": "string",
      "default": "localhost",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_port",
      "label": "[CELERY] Broker Port",
      "description": "The port of the broker to be used by Celery.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 3306,
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_db_name",
      "label": "[CELERY] Broker Database Name",
      "description": "The name of the broker database to be used by Celery. (Leave empty for 'RabbitMQ')",
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_username",
      "label": "[CELERY] Broker Username",
      "description": "The username for Celery to connect to the broker.",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_broker_password",
      "label": "[CELERY] Broker Password",
      "description": "The password for Celery to connect to the broker.",
      "required": true,
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_type",
      "label": "[CELERY] Result Database Type",
      "description": "Type type of the database to be used by Celery.",
      "required": true,
      "type": "string_enum",
      "validValues": [
        "db+postgresql",
        "db+mysql",
        "redis"
      ],
      "default": "db+mysql",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_host",
      "label": "[CELERY] Result Database Host",
      "description": "The IP or hostname of the database to be used by Celery.",
      "required": true,
      "type": "string",
      "default": "localhost",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_port",
      "label": "[CELERY] Result Database Port",
      "description": "The port of the database to be used by Celery.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 3306,
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_name",
      "label": "[CELERY] Result Database Name",
      "description": "The name of the database to be used by Celery.",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_username",
      "label": "[CELERY] Result Database Username",
      "description": "The username for Celery to connect to the database.",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_result_db_password",
      "label": "[CELERY] Result Database Password",
      "description": "The password for Celery to connect to the database.",
      "required": true,
      "type": "password",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_flower_host",
      "label": "[CELERY] Flower Host IP",
      "description": "The IP that the Celery Flower UI binds to.",
      "required": true,
      "type": "string",
      "default": "0.0.0.0",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_flower_url_prefix",
      "label": "[CELERY] Flower URL Prefix",
      "description": "The root URL for Flower.(Example: '/flower')",
      "type": "string",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_flower_port",
      "label": "[CELERY] Flower Port",
      "description": "This defines the port that Celery Flower listens on.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 5555,
      "configurableInWizard": true
    },
    {
      "name": "CELERY_flower_basic_auth",
      "label": "[CELERY] Flower Basic Authentication",
      "description": "Used to secure Flower with Basic Authentication. (Example: 'user1:password1,user2:password2')",
      "type": "string",
      "default": "",
      "configurableInWizard": true
    },
    {
      "name": "CELERY_default_queue",
      "label": "[CELERY] Default Queue",
      "description": "Default queue that tasks get assigned to and that worker listen on.",
      "required": true,
      "type": "string",
      "default": "default"
    },
    {
      "name": "CELERY_sync_parallelism",
      "label": "[CELERY] Sync Parallelism",
      "description": "How many processes CeleryExecutor uses to sync task state. (0 means to use max(1, number of cores - 1) processes)",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 0
    },
    {
      "name": "CELERY_celery_config_options",
      "label": "[CELERY] Celery Config Options",
      "description": "Import path for Celery configuration options.",
      "required": true,
      "type": "string",
      "default": "airflow.config_templates.default_celery.DEFAULT_CELERY_CONFIG"
    },
    {
      "name": "CELERY_ssl_active",
      "label": "[CELERY] Broker SSL Active",
      "description": "If SSL should be used with the Celery Broker (Can only be True with 'RabbitMQ' or 'Redis')",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "CELERY_ssl_key",
      "label": "[CELERY] Broker SSL Key Path",
      "description": "Path to the SSL key for the Celery Broker.",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": ""
    },
    {
      "name": "CELERY_ssl_cert",
      "label": "[CELERY] Broker SSL Certificate Path",
      "description": "Path to the SSL certificate for the Celery Broker.",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": ""
    },
    {
      "name": "CELERY_ssl_cacert",
      "label": "[CELERY] Broker SSL CA Certificate Path",
      "description": "Path to the SSL CA certificate for the Celery Broker.",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": ""
    },
    {
      "name": "SCHEDULER_job_heartbeat_sec",
      "label": "[SCHEDULER] Job Heartbeat Seconds",
      "description": "Task instances listen for external kill signal (when you clear tasks from the CLI or the UI), this defines the frequency at which they should listen (in seconds).",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 5
    },
    {
      "name": "SCHEDULER_scheduler_heartbeat_sec",
      "label": "[SCHEDULER] Scheduler Heartbeat Seconds",
      "description": "The scheduler constantly tries to trigger new tasks (look at the scheduler section in the docs for more information). This defines how often the scheduler should run (in seconds).",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 5
    },
    {
      "name": "SCHEDULER_run_duration",
      "label": "[SCHEDULER] Run Duration",
      "description": "After how much time should the scheduler terminate in seconds. (-1 indicates to run continuously)",
      "required": true,
      "type": "long",
      "min": -1,
      "default": -1
    },
    {
      "name": "SCHEDULER_min_file_process_interval",
      "label": "[SCHEDULER] Min File Process Interval",
      "description": "After how much time (in seconds) a new DAGs should be picked up from the filesystem.",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 0
    },
    {
      "name": "SCHEDULER_dag_dir_list_interval",
      "label": "[SCHEDULER] DAG Directory List Interval",
      "description": "How often (in seconds) to scan the DAGs directory for new files. Default to 5 minutes.",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 300
    },
    {
      "name": "SCHEDULER_print_stats_interval",
      "label": "[SCHEDULER] Print Stats Interval",
      "description": "How often should stats be printed to the logs.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 30
    },
    {
      "name": "SCHEDULER_scheduler_health_check_threshold",
      "label": "[SCHEDULER] Scheduler Health Check Threshold",
      "description": "If the last scheduler heartbeat happened more than scheduler_health_check_threshold ago (in seconds), scheduler is considered unhealthy. (This is used by the health check in the '/health' endpoint)",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 30
    },
    {
      "name": "SCHEDULER_child_process_log_directory",
      "label": "[SCHEDULER] Child Process Log Directory",
      "description": "The log directory for the Scheduler. (This path must be absolute)",
      "required": true,
      "type": "path",
      "pathType": "localDataDir",
      "default": "/var/log/airflow/scheduler",
      "configurableInWizard": true
    },
    {
      "name": "SCHEDULER_scheduler_zombie_task_threshold",
      "label": "[SCHEDULER] Scheduler Zombie Task Threshold",
      "description": "Local task jobs periodically heartbeat to the DB. If the job has not heartbeat in this many seconds, the scheduler will mark the associated task instance as failed and will re-schedule the task.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 300
    },
    {
      "name": "SCHEDULER_catchup_by_default",
      "label": "[SCHEDULER] Catchup By Default",
      "description": "Turn off scheduler catchup by setting this to False. Default behavior is unchanged and Command Line Backfills still work, but the scheduler will not do scheduler catchup if this is False, however it can be set on a per DAG basis in the DAG definition (catchup).",
      "required": true,
      "type": "boolean",
      "default": true
    },
    {
      "name": "SCHEDULER_max_tis_per_query",
      "label": "[SCHEDULER] Max TIs Per Query",
      "description": "This changes the batch size of queries in the scheduling main loop. If this is too high, SQL query performance may be impacted. Additionally, you may hit the maximum allowable query length for your db. Set this to 0 for no limit (not advised)",
      "required": true,
      "type": "long",
      "min": 0,
      "default": 512
    },
    {
      "name": "SCHEDULER_statsd_on",
      "label": "[SCHEDULER] StatsD On",
      "description": "If StatsD integration is enabled. ( See: https://github.com/etsy/statsd )",
      "required": true,
      "type": "boolean",
      "default": false
    },
    {
      "name": "SCHEDULER_statsd_host",
      "label": "[SCHEDULER] StatsD Host",
      "description": "The StatsD IP or hostname. ( See: https://github.com/etsy/statsd )",
      "required": true,
      "type": "string",
      "default": "localhost"
    },
    {
      "name": "SCHEDULER_statsd_port",
      "label": "[SCHEDULER] StatsD Port",
      "description": "The StatsD port. ( See: https://github.com/etsy/statsd )",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 8125
    },
    {
      "name": "SCHEDULER_statsd_prefix",
      "label": "[SCHEDULER] StatsD Prefix",
      "description": "The StatsD prefix. ( See: https://github.com/etsy/statsd )",
      "required": true,
      "type": "string",
      "default": "airflow"
    },
    {
      "name": "SCHEDULER_max_threads",
      "label": "[SCHEDULER] Max Threads",
      "description": "The scheduler can run multiple threads in parallel to schedule dags. This defines how many threads will run.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 2
    },
    {
      "name": "SCHEDULER_use_job_schedule",
      "label": "[SCHEDULER] Use Job Schedule",
      "description": "Turn off scheduler use of cron intervals by setting this to False. (DAGs submitted manually in the web UI or with trigger_dag will still run)",
      "required": true,
      "type": "boolean",
      "default": true
    },
    {
      "name": "LDAP_uri",
      "label": "[LDAP] URI",
      "description": "The URI of the LDAP server.",
      "type": "uri",
      "default": ""
    },
    {
      "name": "LDAP_user_filter",
      "label": "[LDAP] User Filter",
      "description": "A filter for entities under {{LDAP_basedn}}. See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "objectClass=*"
    },
    {
      "name": "LDAP_user_name_attr",
      "label": "[LDAP] User Name Attribute",
      "description": "The entity attribute for user name (sAMAccountName is used for AD). See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "uid"
    },
    {
      "name": "LDAP_group_member_attr",
      "label": "[LDAP] Group Member Attribute",
      "description": "The attribute name for being a member of a group. See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "memberOf"
    },
    {
      "name": "LDAP_superuser_filter",
      "label": "[LDAP] SuperUser Filter",
      "description": "A filter for which users to give superuser permissions (leave empty to give all users). See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": ""
    },
    {
      "name": "LDAP_data_profiler_filter",
      "label": "[LDAP] Data Profiler Filter",
      "description": "A filter for which users to give data profiler permissions (leave empty to give all users). See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": ""
    },
    {
      "name": "LDAP_bind_user",
      "label": "[LDAP] Bind User",
      "description": "The simple bind username (leave blank for anonymous). See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "cn=Manager,dc=example,dc=com"
    },
    {
      "name": "LDAP_bind_password",
      "label": "[LDAP] Bind Password",
      "description": "The simple bind password (leave blank for anonymous). See: https://airflow.apache.org/security.html#ldap",
      "type": "password",
      "default": ""
    },
    {
      "name": "LDAP_basedn",
      "label": "[LDAP] Base Domain Name",
      "description": "The domain path to search for entities within. See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "dc=example,dc=com"
    },
    {
      "name": "LDAP_cacert",
      "label": "[LDAP] CA Certificate",
      "description": "The path of a CA certificate (leave empty if none). See: https://airflow.apache.org/security.html#ldap",
      "type": "path",
      "pathType": "serviceSpecific",
      "default": "/etc/ca/ldap_ca.crt"
    },
    {
      "name": "LDAP_search_scope",
      "label": "[LDAP] Search Scope",
      "description": "How to search for entities (use 'SUBTREE' for AD). See: https://airflow.apache.org/security.html#ldap",
      "type": "string",
      "default": "LEVEL"
    },
    {
      "name": "LDAP_ignore_malformed_schema",
      "label": "[LDAP] Ignore Malformed Schema",
      "description": "This setting allows the use of LDAP servers that either return a broken schema, or do not return a schema.",
      "type": "boolean",
      "default": false
    },
    {
      "name": "KERBEROS_ccache",
      "label": "[KERBEROS] Credential Cache Path",
      "description": "The credential cache path.",
      "required": true,
      "type": "path",
      "pathType": "serviceSpecific",
      "default": "/tmp/airflow_krb5_ccache"
    },
    {
      "name": "KERBEROS_principal",
      "label": "[KERBEROS] Principal",
      "description": "The kerberos principal (username) to initialise. (Must be present in the provided keytab file)",
      "required": true,
      "type": "string",
      "default": "airflow",
      "configurableInWizard": true
    },
    {
      "name": "KERBEROS_reinit_frequency",
      "label": "[KERBEROS] Reinit Frequency",
      "description": "How frequently (in seconds) to reinitialize the ticket.",
      "required": true,
      "type": "long",
      "min": 1,
      "default": 3600
    },
    {
      "name": "KERBEROS_kinit_path",
      "label": "[KERBEROS] Kinit Binary Path",
      "description": "The BASH binary path for the kinit program. ('kinit' will work if kerberos bin is on your PATH)",
      "required": true,
      "type": "string",
      "default": "kinit"
    },
    {
      "name": "KERBEROS_keytab",
      "label": "[KERBEROS] Keytab File Path",
      "description": "The path of the keytab file for 'Airflow Kerberos Renewer' roles to init. (This needs to be visible across all nodes)",
      "required": true,
      "type": "path",
      "pathType": "serviceSpecific",
      "default": "airflow.keytab",
      "configurableInWizard": true
    },
    {
      "name": "ADMIN_hide_sensitive_variable_fields",
      "label": "[ADMIN] Hide Sensitive Variable Fields",
      "description": "If sensitive variable fields are hidden in the UI.",
      "required": true,
      "type": "boolean",
      "default": true
    }
  ],
  "gateway": {
    "alternatives": {
      "name": "airflow-conf",
      "priority": 50,
      "linkRoot": "/etc/airflow/"
    },
    "scriptRunner": {
      "program": "scripts/control.sh",
      "args": [
        "deploy_client_config"
      ],
      "environmentVariables": {
        "AIRFLOW_HOME": "${airflow_home}",
        "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
        "AIRFLOW__CORE__DAGS_FOLDER": "${CORE_dags_folder}",
        "AIRFLOW__CORE__BASE_LOG_FOLDER": "${CORE_base_log_folder}",
        "AIRFLOW__CORE__PLUGINS_FOLDER": "${CORE_plugins_folder}",
        //"AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
        "AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE": "${CORE_db_alchemy_pool_size}",
        "AIRFLOW__CORE__SQL_ALCHEMY_POOL_RECYCLE": "${CORE_db_alchemy_pool_recycle}",
        "AIRFLOW__CORE__SQL_ALCHEMY_RECONNECT_TIMEOUT": "${CORE_db_alchemy_reconnect_timeout}",
        "AIRFLOW__CORE__PARALLELISM": "${CORE_parallelism}",
        "AIRFLOW__CORE__DAG_CONCURRENCY": "${CORE_dag_concurrency}",
        "AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION": "${CORE_dags_are_paused_at_creation}",
        "AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT": "${CORE_non_pooled_task_slot_count}",
        "AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG": "${CORE_max_active_runs_per_dag}",
        "AIRFLOW__CORE__LOAD_EXAMPLES": "${CORE_load_examples}",
        //"AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
        "AIRFLOW__CORE__DONOT_PICKLE": "${CORE_donot_pickle}",
        "AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT": "${CORE_dagbag_import_timeout}",
        "AIRFLOW__CORE__DEFAULT_IMPERSONATION": "${CORE_default_impersonation}",
        "AIRFLOW__CORE__SECURITY": "${CORE_security}",
        "AIRFLOW__CORE__SECURE_MODE": "${CORE_secure_mode}",
        "AIRFLOW__CORE__KILLED_TASK_CLEANUP_TIME": "${CORE_killed_task_cleanup_time}",
        "AIRFLOW__CORE__DAG_RUN_CONF_OVERRIDES_PARAMS": "${CORE_dag_run_conf_overrides_params}",
        "AIRFLOW__CORE__WORKER_PRECHECK": "${CORE_worker_precheck}",
        "AIRFLOW__CORE__DAG_DISCOVERY_SAFE_MODE": "${CORE_dag_discovery_safe_mode}",
        "AIRFLOW__CLI__API_CLIENT": "${CLI_api_client}",
        "AIRFLOW__CLI__ENDPOINT_URL": "${CLI_endpoint_url}",
        "AIRFLOW__API__AUTH_BACKEND": "${API_auth_backend}",
        "AIRFLOW__LINEAGE__BACKEND": "${LINEAGE_backend}",
        "AIRFLOW__ATLAS__HOST": "${ATLAS_host}",
        "AIRFLOW__ATLAS__PORT": "${ATLAS_port}",
        "AIRFLOW__ATLAS__USERNAME": "${ATLAS_username}",
        //"AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
        "AIRFLOW__OPERATORS__DEFAULT_OWNER": "${OPERATORS_default_owner}",
        "AIRFLOW__OPERATORS__DEFAULT_CPUS": "${OPERATORS_default_cpus}",
        "AIRFLOW__OPERATORS__DEFAULT_RAM": "${OPERATORS_default_ram}",
        "AIRFLOW__OPERATORS__DEFAULT_DISK": "${OPERATORS_default_disk}",
        "AIRFLOW__OPERATORS__DEFAULT_GPUS": "${OPERATORS_default_gpus}",
        "AIRFLOW__HIVE__DEFAULT_HIVE_MAPRED_QUEUE": "${HIVE_default_hive_mapred_queue}",
        "AIRFLOW__WEBSERVER__BASE_URL": "${WEBSERVER_base_url}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_HOST": "${WEBSERVER_web_server_host}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_PORT": "${WEBSERVER_web_server_port}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT": "${WEBSERVER_web_server_ssl_cert}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY": "${WEBSERVER_web_server_ssl_key}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT": "${WEBSERVER_web_server_master_timeout}",
        "AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT": "${WEBSERVER_web_server_worker_timeout}",
        "AIRFLOW__WEBSERVER__WORKER_REFRESH_BATCH_SIZE": "${WEBSERVER_worker_refresh_batch_size}",
        "AIRFLOW__WEBSERVER__WORKER_REFRESH_INTERVAL": "${WEBSERVER_worker_refresh_interval}",
        //"AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
        "AIRFLOW__WEBSERVER__WORKERS": "${WEBSERVER_workers}",
        "AIRFLOW__WEBSERVER__WORKER_CLASS": "${WEBSERVER_worker_class}",
        "AIRFLOW__WEBSERVER__EXPOSE_CONFIG": "${WEBSERVER_expose_config}",
        "AIRFLOW__WEBSERVER__AUTHENTICATE": "${WEBSERVER_authenticate}",
        "AIRFLOW__WEBSERVER__AUTH_BACKEND": "${WEBSERVER_auth_backend}",
        "AIRFLOW__WEBSERVER__FILTER_BY_OWNER": "${WEBSERVER_filter_by_owner}",
        "AIRFLOW__WEBSERVER__OWNER_MODE": "${WEBSERVER_owner_mode}",
        "AIRFLOW__WEBSERVER__DAG_DEFAULT_VIEW": "${WEBSERVER_dag_default_view}",
        "AIRFLOW__WEBSERVER__DAG_ORIENTATION": "${WEBSERVER_dag_orientation}",
        "AIRFLOW__WEBSERVER__LOG_FETCH_TIMEOUT_SEC": "${WEBSERVER_log_fetch_timeout_sec}",
        "AIRFLOW__WEBSERVER__HIDE_PAUSED_DAGS_BY_DEFAULT": "${WEBSERVER_hide_paused_dags_by_default}",
        "AIRFLOW__WEBSERVER__PAGE_SIZE": "${WEBSERVER_page_size}",
        "AIRFLOW__WEBSERVER__RBAC": "${WEBSERVER_rbac}",
        "AIRFLOW__WEBSERVER__NAVBAR_COLOR": "${WEBSERVER_navbar_color}",
        "AIRFLOW__WEBSERVER__DEFAULT_DAG_RUN_DISPLAY_NUMBER": "${WEBSERVER_default_dag_run_display_number}",
        "AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX": "${WEBSERVER_enable_proxy_fix}",
        "AIRFLOW__WEBSERVER__COOKIE_SECURE": "${WEBSERVER_cookie_secure}",
        "AIRFLOW__WEBSERVER__COOKIE_SAMESITE": "${WEBSERVER_cookie_samesite}",
        "AIRFLOW__EMAIL__EMAIL_BACKEND": "${EMAIL_email_backend}",
        "AIRFLOW__SMTP__SMTP_HOST": "${SMTP_smtp_host}",
        "AIRFLOW__SMTP__SMTP_PORT": "${SMTP_smtp_port}",
        "AIRFLOW__SMTP__STARTTLS": "${SMTP_smtp_starttls}",
        "AIRFLOW__SMTP__SMTP_SSL": "${SMTP_smtp_ssl}",
        "AIRFLOW__SMTP__SMTP_USER": "${SMTP_smtp_user}",
        //"AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
        "AIRFLOW__SMTP__SMTP_MAIL_FROM": "${SMTP_smtp_mail_from}",
        "AIRFLOW__CELERY__CELERY_APP_NAME": "${CELERY_celery_app_name}",
        "AIRFLOW__CELERY__WORKER_AUTOSCALE": "${CELERY_worker_autoscale}",
        "AIRFLOW__CELERY__WORKER_LOG_SERVER_PORT": "${CELERY_worker_log_server_port}",
        //"AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
        //"AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
        "AIRFLOW__CELERY__FLOWER_HOST": "${CELERY_flower_host}",
        "AIRFLOW__CELERY__FLOWER_URL_PREFIX": "${CELERY_flower_url_prefix}",
        "AIRFLOW__CELERY__FLOWER_PORT": "${CELERY_flower_port}",
        "AIRFLOW__CELERY__FLOWER_BASIC_AUTH": "${CELERY_flower_basic_auth}",
        "AIRFLOW__CELERY__DEFAULT_QUEUE": "${CELERY_default_queue}",
        "AIRFLOW__CELERY__SYNC_PARALLELISM": "${CELERY_sync_parallelism}",
        "AIRFLOW__CELERY__CELERY_CONFIG_OPTIONS": "${CELERY_celery_config_options}",
        "AIRFLOW__CELERY__SSL_ACTIVE": "${CELERY_ssl_active}",
        "AIRFLOW__CELERY__SSL_KEY": "${CELERY_ssl_key}",
        "AIRFLOW__CELERY__SSL_CERT": "${CELERY_ssl_cert}",
        "AIRFLOW__CELERY__SSL_CACERT": "${CELERY_ssl_cacert}",
        "AIRFLOW__SCHEDULER__JOB_HEARTBEAT_SEC": "${SCHEDULER_job_heartbeat_sec}",
        "AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC": "${SCHEDULER_scheduler_heartbeat_sec}",
        "AIRFLOW__SCHEDULER__RUN_DURATION": "${SCHEDULER_run_duration}",
        "AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL": "${SCHEDULER_min_file_process_interval}",
        "AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL": "${SCHEDULER_dag_dir_list_interval}",
        "AIRFLOW__SCHEDULER__PRINT_STATS_INTERVAL": "${SCHEDULER_print_stats_interval}",
        "AIRFLOW__SCHEDULER__SCHEDULER_HEATH_CHECK_THRESHOLD": "${SCHEDULER_scheduler_health_check_threshold}",
        "AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY": "${SCHEDULER_child_process_log_directory}",
        "AIRFLOW__SCHEDULER__SCHEDULER_ZOMBIE_TASK_THRESHOLD": "${SCHEDULER_scheduler_zombie_task_threshold}",
        "AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT": "${SCHEDULER_catchup_by_default}",
        "AIRFLOW__SCHEDULER__MAX_TIS_PER_QUERY": "${SCHEDULER_max_tis_per_query}",
        "AIRFLOW__SCHEDULER__STATSD_ON": "${SCHEDULER_statsd_on}",
        "AIRFLOW__SCHEDULER__STATSD_HOST": "${SCHEDULER_statsd_host}",
        "AIRFLOW__SCHEDULER__STATSD_PORT": "${SCHEDULER_statsd_port}",
        "AIRFLOW__SCHEDULER__STATSD_PREFIX": "${SCHEDULER_statsd_prefix}",
        "AIRFLOW__SCHEDULER__MAX_THREADS": "${SCHEDULER_max_threads}",
        "AIRFLOW__SCHEDULER__USE_JOB_SCHEDULE": "${SCHEDULER_use_job_schedule}",
        "AIRFLOW__LDAP__URI": "${LDAP_uri}",
        "AIRFLOW__LDAP__USER_FILTER": "${LDAP_user_filter}",
        "AIRFLOW__LDAP__USER_NAME_ATTR": "${LDAP_user_name_attr}",
        "AIRFLOW__LDAP__GROUP_MEMBER_ATTR": "${LDAP_group_member_attr}",
        "AIRFLOW__LDAP__SUPERUSER_FILTER": "${LDAP_superuser_filter}",
        "AIRFLOW__LDAP__DATA_PROFILER_FILTER": "${LDAP_data_profiler_filter}",
        "AIRFLOW__LDAP__BIND_USER": "${LDAP_bind_user}",
        //"AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}",
        "AIRFLOW__LDAP__BASEDN": "${LDAP_basedn}",
        "AIRFLOW__LDAP__CACERT": "${LDAP_cacert}",
        "AIRFLOW__LDAP__SEARCH_SCOPE": "${LDAP_search_scope}",
        "AIRFLOW__LDAP__IGNORE_MALFORMED_SCHEMA": "${LDAP_ignore_malformed_schema}",
        "AIRFLOW__KERBEROS__CCACHE": "${KERBEROS_ccache}",
        "AIRFLOW__KERBEROS__PRINCIPAL": "${KERBEROS_principal}",
        "AIRFLOW__KERBEROS__REINIT_FREQUENCY": "${KERBEROS_reinit_frequency}",
        "AIRFLOW__KERBEROS__KINIT_PATH": "${KERBEROS_kinit_path}",
        "AIRFLOW__KERBEROS__KEYTAB": "${KERBEROS_keytab}",
        "AIRFLOW__ADMIN__HIDE_SENSITIVE_VARIABLE_FIELDS": "${ADMIN_hide_sensitive_variable_fields}"
      }
    },
    "configWriter": {
      "auxConfigGenerators": [
        {
          "filename": "airflow-conf/airflow.cfg",
          "sourceFilename": "_aux/airflow.cfg"
        }
      ]
    }
  },
  "rolesWithExternalLinks": [
    "AIRFLOW_WEBSERVER",
    "AIRFLOW_CELERY_FLOWER"
  ],
  "roles": [
    {
      "name": "AIRFLOW_SCHEDULER",
      "label": "Airflow Scheduler",
      "pluralLabel": "Airflow Schedulers",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "start_scheduler"
        ],
        "environmentVariables": {
          "AIRFLOW_HOME": "${airflow_home}",
          "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
          "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
          "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
          "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
          "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
          "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
          "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
          "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
          "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
        }
      },
      "stopRunner": {
        "timeout": "30000"
      },
      "topology": {
        "minInstances": 1,
        "maxInstances": 1
      },
      "healthAggregation": {
        "type": "singleton"
      },
      "commands": [
        {
          "name": "InitializeAirflowDB",
          "label": "Initialize Airflow DB",
          "description": "Initialize the Airflow Database. ( See: https://airflow.apache.org/howto/initialize-database.html )",
          "expectedExitCodes": [
            0
          ],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/control.sh",
            "args": [
              "initialize_db_backend"
            ],
            "environmentVariables": {
              "AIRFLOW_HOME": "${airflow_home}",
              "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
              "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
              "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
              "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
              "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
              "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
              "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
              "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
              "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
            }
          }
        },
        {
          "name": "UpgradeAirflowDB",
          "label": "Upgrade Airflow DB",
          "description": "Upgrade the Airflow Database.",
          "expectedExitCodes": [
            0
          ],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/control.sh",
            "args": [
              "upgrade_db_backend"
            ],
            "environmentVariables": {
              "AIRFLOW_HOME": "${airflow_home}",
              "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
              "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
              "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
              "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
              "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
              "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
              "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
              "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
              "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
            }
          }
        }
      ]
    },
    {
      "name": "AIRFLOW_WEBSERVER",
      "label": "Airflow WebServer",
      "pluralLabel": "Airflow WebServers",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "start_webserver"
        ],
        "environmentVariables": {
          "AIRFLOW_HOME": "${airflow_home}",
          "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
          "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
          "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
          "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
          "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
          "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
          "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
          "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
          "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
        }
      },
      "stopRunner": {
        "timeout": "30000"
      },
      "externalLink": {
        "name": "airflow_web_ui",
        "label": "Airflow WebUI",
        "url": "http://${host}:${WEBSERVER_web_server_port}"
      },
      "topology": {
        "minInstances": 1
      },
      "healthAggregation": {
        "type": "singleton"
      }
    },
    {
      "name": "AIRFLOW_WORKER",
      "label": "Airflow Worker",
      "pluralLabel": "Airflow Workers",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "start_worker"
        ],
        "environmentVariables": {
          "AIRFLOW_HOME": "${airflow_home}",
          "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
          "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
          "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
          "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
          "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
          "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
          "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
          "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
          "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
        }
      },
      "stopRunner": {
        "timeout": "30000"
      },
      "topology": {
        "minInstances": 1
      },
      "healthAggregation": {
        "type": "nonSingleton",
        "percentGreenForGreen": 95.0,
        "percentYellowGreenForYellow": 90.0
      }
    },
    {
      "name": "AIRFLOW_KERBEROS_RENEWER",
      "label": "Airflow Kerberos Renewer",
      "pluralLabel": "Airflow Kerberos Renewers",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "start_kerberos_renewer"
        ],
        "environmentVariables": {
          "AIRFLOW_HOME": "${airflow_home}",
          "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
          "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
          "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
          "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
          "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
          "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
          "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
          "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
          "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
        }
      },
      "stopRunner": {
        "timeout": "30000"
      },
      "topology": {
        "minInstances": "0"
      }
    },
    {
      "name": "AIRFLOW_CELERY_FLOWER",
      "label": "Airflow Celery Flower UI",
      "pluralLabel": "Airflow Celery Flower UIs",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "start_celery_flower"
        ],
        "environmentVariables": {
          "AIRFLOW_HOME": "${airflow_home}",
          "AIRFLOW_CONFIG": "/etc/airflow/conf/airflow.cfg",
          "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "${CORE_db_type}://${CORE_db_username}:${CORE_db_password}@${CORE_db_host}:${CORE_db_port}/${CORE_db_name}",
          "AIRFLOW__CORE__FERNET_KEY": "${CORE_fernet_key}",
          "AIRFLOW__ATLAS__PASSWORD": "${ATLAS_password}",
          "AIRFLOW__WEBSERVER__SECRET_KEY": "${WEBSERVER_secret_key}",
          "AIRFLOW__SMTP__SMTP_PASSWORD": "${SMTP_smtp_password}",
          "AIRFLOW__CELERY__BROKER_URL": "${CELERY_broker_type}://${CELERY_broker_username}:${CELERY_broker_password}@${CELERY_broker_host}:${CELERY_broker_port}/${CELERY_broker_db_name}",
          "AIRFLOW__CELERY__RESULT_BACKEND": "${CELERY_result_db_type}://${CELERY_result_db_username}:${CELERY_result_db_password}@${CELERY_result_db_host}:${CELERY_result_db_port}/${CELERY_result_db_name}",
          "AIRFLOW__LDAP__BIND_PASSWORD": "${LDAP_bind_password}"
        }
      },
      "stopRunner": {
        "timeout": "30000"
      },
      "externalLink": {
        "name": "airflow_celery_flower_ui",
        "label": "Celery Flower UI",
        "url": "http://${host}:${CELERY_flower_port}/${CELERY_flower_url_prefix}"
      },
      "topology": {
        "minInstances": 0
      }
    }
  ]
}
